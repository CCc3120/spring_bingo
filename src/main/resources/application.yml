#=================================编码=================================
server:
  servlet:
    encoding:
      force-request: true
      force-response: true

#=================================spring相关=================================
spring:
  profiles:
    active: dev

#=================================banner配置=================================
  banner:
    charset: utf-8
    location: banner.txt

#=================================数据库连接池=================================
  datasource:
    name: mysql_datasource
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      # druid 数据源专有配置
      # 初始化大小，最小，最大
      initial-size: 10
      min-idle: 10
      max-active: 50
      # 最大等待毫秒数, 单位为 ms, 超过时间会出错误信息
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是 ms
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是 ms
      min-evictable-idle-time-millis: 300000
      # 验证连接是否有效。此参数必须设置为非空字符串，下面三项设置成true才能生效
      validation-query: SELECT 1
      validation-query-timeout: 30000
      # 建议配置为true，不影响性能，并且保证安全性，当程序请求连接，池在分配连接时，是否先检查该连接是否有效。(高效)
      test-while-idle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: false
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true  mysql关闭设置为0(20)。
      max-pool-prepared-statement-per-connection-size: 0
      #配置监控统计拦截的filters，去掉后监控界面sql无法统计，stat:监控统计、log4j：日志记录、wall：防御sql注入
#      filters: stat,wall,log4j
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: false
      filter:
        stat:
          # 打开mergeSql功能；慢SQL记录
          enabled: true
          merge-sql: true
          log-slow-sql: true
          slow-sql-millis: 500
        wall:
          # enabled: false #默认值为false，sql防火墙，支持过滤sql，如禁止使用delete *等操作。
          enabled: true
          config:
            # sql 过滤,不允许删表
            drop-table-allow: false
        slf4j:
          enabled: false
        # statement-sql-pretty-format: true
        # statement-sql-format-option:
        # log4j:
        # log4j2:
#        commons-log:
#          enabled: true
#          statement-sql-pretty-format: true
#          statement-sql-format-option:
      stat-view-servlet:
        enabled: true
        url-pattern: "/druid/*"
        # IP白名单(没有配置或者为空，则允许所有访问)
        allow: 127.0.0.1
        # IP黑名单 (存在共同时，deny优先于allow)
        deny: 192.168.1.73
        # 禁用HTML页面上的“Reset All”功能
        reset-enable: false
        # 访问账号密码
        login-username: admin
        login-password: admin
      web-stat-filter:
        # 建议关闭
        enabled: false
        session-stat-enable: false

#=================================aop切面=================================
  aop:
    auto: true
    proxy-target-class: true

#=================================security=================================
  security:
    user:
      name: admin
      password: admin

  #=================================文件上传=================================
  servlet:
    multipart:
      # 开启 multipart 上传功能
      enabled: true
      # 设置文件缓存的临界点,超过则先保存到临时目录（会自动删除）
      file-size-threshold: 2KB
      # 上传文件的临时目录
      location: ./temp
      # 最大文件大小
      max-file-size: 200MB
      # 最大请求大小
      max-request-size: 215MB

#=================================日志=================================
  #Logback：logback-spring.xml, logback-spring.groovy, logback.xml, logback.groovy
  #Log4j：log4j-spring.properties, log4j-spring.xml, log4j.properties, log4j.xml
  #Log4j2：log4j2-spring.xml, log4j2.xml
  #JDK (Java Util Logging)：logging.properties
  #配置日志文件路径 不使用以上名称可自行配置
logging:
  config: classpath:logback-spring.xml
  file:
    path: ./logs

#=================================mybatis-plus控制台打印sql=================================
mybatis-plus:
  mapper-locations: classpath*:com/bingo/spring_bingo/**/xml/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    default-fetch-size: 3
    # 开启器懒加载
    lazy-loading-enabled: true
    # 对任意延迟属性的调用会使带有延迟加载属性的对象完整加载
    aggressive-lazy-loading: false
    # 触发懒加载方法，因为不需要，平时很少用到，所以用clone，不配置懒加载不生效
    lazy-load-trigger-methods:
      - clone
  global-config:
    db-config:
#      自动填充中设置了
#      id-type: assign_uuid
      logic-delete-value: N
      logic-not-delete-value: Y
